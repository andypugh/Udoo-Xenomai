***************
*** 238,247 ****
   */
  extern struct task_struct *__switch_to(struct task_struct *, struct thread_info *, struct thread_info *);
  
  #define switch_to(prev,next,last)					\
  do {									\
  	last = __switch_to(prev,task_thread_info(prev), task_thread_info(next));	\
  } while (0)
  
  #if defined(CONFIG_CPU_SA1100) || defined(CONFIG_CPU_SA110)
  /*
--- 238,256 ----
   */
  extern struct task_struct *__switch_to(struct task_struct *, struct thread_info *, struct thread_info *);
  
+ #if defined(CONFIG_IPIPE_WANT_PREEMPTIBLE_SWITCH) || defined(CONFIG_SMP)
  #define switch_to(prev,next,last)					\
  do {									\
+ 	local_irq_disable_hw_cond();					\
  	last = __switch_to(prev,task_thread_info(prev), task_thread_info(next));	\
+ 	local_irq_enable_hw_cond();					\
  } while (0)
+ #else /* !CONFIG_IPIPE_WANT_PREEMPTIBLE_SWITCH && !SMP */
+ #define switch_to(prev,next,last)					\
+ do {									\
+ 	last = __switch_to(prev,task_thread_info(prev), task_thread_info(next)); \
+ } while (0)
+ #endif /* !CONFIG_IPIPE_WANT_PREEMPTIBLE_SWITCH && !SMP */
  
  #if defined(CONFIG_CPU_SA1100) || defined(CONFIG_CPU_SA110)
  /*
***************
*** 302,318 ****
  #error SMP is not supported on this platform
  #endif
  	case 1:
- 		raw_local_irq_save(flags);
  		ret = *(volatile unsigned char *)ptr;
  		*(volatile unsigned char *)ptr = x;
- 		raw_local_irq_restore(flags);
  		break;
  
  	case 4:
- 		raw_local_irq_save(flags);
  		ret = *(volatile unsigned long *)ptr;
  		*(volatile unsigned long *)ptr = x;
- 		raw_local_irq_restore(flags);
  		break;
  #else
  	case 1:
--- 311,327 ----
  #error SMP is not supported on this platform
  #endif
  	case 1:
+ 		local_irq_save_hw(flags);
  		ret = *(volatile unsigned char *)ptr;
  		*(volatile unsigned char *)ptr = x;
+ 		local_irq_restore_hw(flags);
  		break;
  
  	case 4:
+ 		local_irq_save_hw(flags);
  		ret = *(volatile unsigned long *)ptr;
  		*(volatile unsigned long *)ptr = x;
+ 		local_irq_restore_hw(flags);
  		break;
  #else
  	case 1:
