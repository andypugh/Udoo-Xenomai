***************
*** 218,223 ****
  #ifndef __ASSEMBLY__
  
  #include <linux/sched.h>
  
  struct cpu_tlb_fns {
  	void (*flush_user_range)(unsigned long, unsigned long, struct vm_area_struct *);
--- 218,224 ----
  #ifndef __ASSEMBLY__
  
  #include <linux/sched.h>
+ #include <asm/fcse.h>
  
  struct cpu_tlb_fns {
  	void (*flush_user_range)(unsigned long, unsigned long, struct vm_area_struct *);
***************
*** 408,414 ****
  	const int zero = 0;
  	const unsigned int __tlb_flag = __cpu_tlb_flags;
  
- 	uaddr = (uaddr & PAGE_MASK) | ASID(vma->vm_mm);
  
  	if (tlb_flag(TLB_WB))
  		dsb();
--- 409,416 ----
  	const int zero = 0;
  	const unsigned int __tlb_flag = __cpu_tlb_flags;
  
+ 	uaddr = (fcse_va_to_mva(vma->vm_mm, uaddr) & PAGE_MASK)
+ 		| ASID(vma->vm_mm);
  
  	if (tlb_flag(TLB_WB))
  		dsb();
***************
*** 545,551 ****
  /*
   * Convert calls to our calling convention.
   */
- #define local_flush_tlb_range(vma,start,end)	__cpu_flush_user_tlb_range(start,end,vma)
  #define local_flush_tlb_kernel_range(s,e)	__cpu_flush_kern_tlb_range(s,e)
  
  #ifndef CONFIG_SMP
--- 547,561 ----
  /*
   * Convert calls to our calling convention.
   */
+ #define local_flush_tlb_range(vma, start, end)			\
+ 	({							\
+ 		struct mm_struct *_mm = (vma)->vm_mm;		\
+ 		unsigned long _start, _end;			\
+ 		_start = fcse_va_to_mva(_mm, start);		\
+ 		_end = fcse_va_to_mva(_mm, end);		\
+ 		__cpu_flush_user_tlb_range(_start, _end, vma);	\
+ 	})
+ 
  #define local_flush_tlb_kernel_range(s,e)	__cpu_flush_kern_tlb_range(s,e)
  
  #ifndef CONFIG_SMP
