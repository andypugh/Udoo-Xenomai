***************
*** 147,152 ****
  {
  	struct mm_struct *mm = vma->vm_mm;
  	unsigned long oldflags = vma->vm_flags;
  	long nrpages = (end - start) >> PAGE_SHIFT;
  	unsigned long charged = 0;
  	pgoff_t pgoff;
--- 147,153 ----
  {
  	struct mm_struct *mm = vma->vm_mm;
  	unsigned long oldflags = vma->vm_flags;
+ 	unsigned long protflags;
  	long nrpages = (end - start) >> PAGE_SHIFT;
  	unsigned long charged = 0;
  	pgoff_t pgoff;
***************
*** 205,212 ****
  	 * held in write mode.
  	 */
  	vma->vm_flags = newflags;
  	vma->vm_page_prot = pgprot_modify(vma->vm_page_prot,
- 					  vm_get_page_prot(newflags));
  
  	if (vma_wants_writenotify(vma)) {
  		vma->vm_page_prot = vm_get_page_prot(newflags & ~VM_SHARED);
--- 206,222 ----
  	 * held in write mode.
  	 */
  	vma->vm_flags = newflags;
+ 	protflags = newflags;
+ #ifdef CONFIG_IPIPE
+ 	/*
+ 	 * Enforce non-COW vm_page_prot by faking VM_SHARED on locked regions.
+ 	 */
+ 	if (test_bit(MMF_VM_PINNED, &mm->flags) &&
+ 	    ((vma->vm_flags | mm->def_flags) & VM_LOCKED))
+ 		protflags |= VM_SHARED;
+ #endif
  	vma->vm_page_prot = pgprot_modify(vma->vm_page_prot,
+ 					  vm_get_page_prot(protflags));
  
  	if (vma_wants_writenotify(vma)) {
  		vma->vm_page_prot = vm_get_page_prot(newflags & ~VM_SHARED);
***************
*** 214,219 ****
  	}
  
  	mmu_notifier_invalidate_range_start(mm, start, end);
  	if (is_vm_hugetlb_page(vma))
  		hugetlb_change_protection(vma, start, end, vma->vm_page_prot);
  	else
--- 224,247 ----
  	}
  
  	mmu_notifier_invalidate_range_start(mm, start, end);
+ #ifdef CONFIG_IPIPE
+ 	/*
+ 	 * Privatize potential COW pages
+ 	 */
+ 	if (test_bit(MMF_VM_PINNED, &mm->flags) &&
+ 	    (((vma->vm_flags | mm->def_flags) & (VM_LOCKED | VM_WRITE)) ==
+ 	     (VM_LOCKED | VM_WRITE))) {
+ 		error = __ipipe_pin_vma(mm, vma);
+ 		if (error)
+ 			/*
+ 			 * OOM. Just revert the fake VM_SHARED so that the
+ 			 * zero page cannot be overwritten.
+ 			 */
+ 			vma->vm_page_prot =
+ 				pgprot_modify(vma->vm_page_prot,
+ 					      vm_get_page_prot(newflags));
+ 	}
+ #endif
  	if (is_vm_hugetlb_page(vma))
  		hugetlb_change_protection(vma, start, end, vma->vm_page_prot);
  	else
